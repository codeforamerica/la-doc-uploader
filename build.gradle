plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'com.adarshr.test-logger' version '3.2.0'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

def props = new Properties()
if (file(".env").exists()) {
    file(".env").withInputStream { props.load(it) }
}

repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    mavenCentral()
}

def profile = props.getProperty('SPRING_PROFILES_ACTIVE')

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.flywaydb:flyway-core'

    if (profile == 'dev') {
        implementation fileTree(dir: "$rootDir/../form-flow/build/libs", include: '*.jar')
        println "Using local library ðŸ—¼"
    } else {
        implementation 'org.codeforamerica.platform:form-flow:0.0.1-SNAPSHOT'
        println "Using 0.0.1-SNAPSHOT ðŸ’œ"
    }

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.8.1'
    testImplementation 'io.percy:percy-java-selenium:1.3.2'
    testImplementation 'org.awaitility:awaitility'
    testImplementation 'io.github.bonigarcia:webdrivermanager:5.3.2'
    testImplementation 'com.h2database:h2'

    runtimeOnly 'org.postgresql:postgresql'
}

springBoot {
    buildInfo()
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    environment("ENCRYPTION_KEY", "this-is-a-dummy-key-for-la-tests")
}

jar {
  enabled false
}